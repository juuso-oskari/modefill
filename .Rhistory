avg_err = ifelse(length(na_indices) > 0, sum(e[-na_indices]) / ntests, sum(e) / ntests)
cat("Average error: ", avg_err, "\n")
cat("Average error (5% reduced from both sides): ", mean(e, trim = 0.05, na.rm = TRUE), "\n")
wi <- order(e, decreasing = TRUE)[1:5]
cat("5 worst predictions: \n")
cat("predicted values: ", res[wi], "\n")
cat("actual values: ", targets[wi], "\n")
n = 1
cat("inspection of ", n, "th worst prediction:\n")
ord.dt[(test_indices[wi[1]]-1):(test_indices[wi[1]]+1),]
update.packages(c("haven", "sas7bdat", "data.table"))
require(haven)
require(sas7bdat)
require(data.table)
dt <- setDT(read_sas("data.sas7bdat"))
# convert to dates
dt[, otpvm:=as.Date(otpvm, "%Y-%m-%d")]
# remove toimituskulu from kust
dt[otpvm<as.Date("2014-01-01"), kust:=(kust-43)]
dt[otpvm>=as.Date("2014-01-01"), kust:=(kust-239)]
ord.dt <- dt[order(vnr, otpvm)]
ii <- which( (is.na(ord.dt[,"ddd"]) | ord.dt[,"ddd"]==0) & ord.dt[,"anja"]!="")
ntests = 1000
test_indices <- sample((1:nrow(dt))[-ii], ntests)
# Currently, finds the closest prior match by date with the same vnr. If prior not found, finds nearest after
# kmean by default eq 1, but if changed checks if the result is reasonable against mean of kmean values (tolerance 10)
fx <- function(i, kmean=1) {
nearest <- function(i, dir){
if(ord.dt[i+1*dir, "vnr"]==ord.dt[i, "vnr"]){
ifelse(!is.na(ord.dt[[i+1*dir,"ddd"]]), ord.dt[[i+1*dir,"ddd"]] / ord.dt[[i+1*dir,"kust"]], nearest(i+1*dir, dir))
}else{
NA
}
}
nearest_prior <- nearest(i, -1)
res<-ifelse(!is.na(nearest_prior), ord.dt[[i, "kust"]] * nearest_prior , ord.dt[[i, "kust"]] * nearest(i, 1))
if(kmean!=1){
d <- ord.dt[(i - ceiling(kmean/2)): (i + floor(kmean/2))][vnr==ord.dt[[i, "vnr"]],][-(ceiling(kmean/2)+1)]
mean_res <- ord.dt[[i, "kust"]] * mean(unlist(d[,"ddd"] / d[,"kust"]), trim = 0.3, na.rm = TRUE)
ifelse(abs(mean_res-res)>10, mean_res, res)
}else{
res
}
}
indices_used <- ifelse(params$test, test_indices, ii)
system.time(
res <- lapply(ii, fx, kmean=4)
)
res <- unlist(res)
ord.dt$ddd[ii] <- res
which(is.na(res))
ord.dt[is.na(ddd) & anja!=""]
targets <- unname(unlist(ord.dt[test_indices, "ddd"]))
e <- abs(targets - res)
na_indices <- which(is.na(e))
cat("Number of NA values: ", length(na_indices), "\n")
avg_err = ifelse(length(na_indices) > 0, sum(e[-na_indices]) / ntests, sum(e) / ntests)
cat("Average error: ", avg_err, "\n")
cat("Average error (5% reduced from both sides): ", mean(e, trim = 0.05, na.rm = TRUE), "\n")
wi <- order(e, decreasing = TRUE)[1:5]
cat("5 worst predictions: \n")
cat("predicted values: ", res[wi], "\n")
cat("actual values: ", targets[wi], "\n")
n = 1
cat("inspection of ", n, "th worst prediction:\n")
ord.dt[(test_indices[wi[1]]-1):(test_indices[wi[1]]+1),]
update.packages(c("haven", "sas7bdat", "data.table"))
require(haven)
require(sas7bdat)
require(data.table)
dt <- setDT(read_sas("data.sas7bdat"))
# convert to dates
dt[, otpvm:=as.Date(otpvm, "%Y-%m-%d")]
# remove toimituskulu from kust
dt[otpvm<as.Date("2014-01-01"), kust:=(kust-43)]
dt[otpvm>=as.Date("2014-01-01"), kust:=(kust-239)]
ord.dt <- dt[order(vnr, otpvm)]
ii <- which( (is.na(ord.dt[,"ddd"]) | ord.dt[,"ddd"]==0) & ord.dt[,"anja"]!="")
# Currently, finds the closest prior match by date with the same vnr. If prior not found, finds nearest after
# kmean by default eq 1, but if changed checks if the result is reasonable against mean of kmean values (tolerance 10)
fx <- function(i, kmean=1) {
nearest <- function(i, dir){
if(ord.dt[i+1*dir, "vnr"]==ord.dt[i, "vnr"]){
ifelse(!is.na(ord.dt[[i+1*dir,"ddd"]]), ord.dt[[i+1*dir,"ddd"]] / ord.dt[[i+1*dir,"kust"]], nearest(i+1*dir, dir))
}else{
NA
}
}
nearest_prior <- nearest(i, -1)
res<-ifelse(!is.na(nearest_prior), ord.dt[[i, "kust"]] * nearest_prior , ord.dt[[i, "kust"]] * nearest(i, 1))
if(kmean!=1){
d <- ord.dt[(i - ceiling(kmean/2)): (i + floor(kmean/2))][vnr==ord.dt[[i, "vnr"]],][-(ceiling(kmean/2)+1)]
mean_res <- ord.dt[[i, "kust"]] * mean(unlist(d[,"ddd"] / d[,"kust"]), trim = 0.3, na.rm = TRUE)
ifelse(abs(mean_res-res)>10, mean_res, res)
}else{
res
}
}
indices_used <- ifelse(params$test, test_indices, ii)
system.time(
res <- lapply(ii, fx, kmean=4)
)
res <- unlist(res)
ord.dt$ddd[ii] <- res
which(is.na(res))
ord.dt[is.na(ddd) & anja!=""]
update.packages(c("haven", "sas7bdat", "data.table"))
# update.packages(c("haven", "sas7bdat", "data.table"))
require(haven)
require(sas7bdat)
require(data.table)
dt <- setDT(read_sas("data.sas7bdat"))
# convert to dates
dt[, otpvm:=as.Date(otpvm, "%Y-%m-%d")]
# remove toimituskulu from kust
dt[otpvm<as.Date("2014-01-01"), kust:=(kust-43)]
dt[otpvm>=as.Date("2014-01-01"), kust:=(kust-239)]
ord.dt <- dt[order(vnr, otpvm)]
ii <- which( (is.na(ord.dt[,"ddd"]) | ord.dt[,"ddd"]==0) & ord.dt[,"anja"]!="")
# Currently, finds the closest prior match by date with the same vnr. If prior not found, finds nearest after
# kmean by default eq 1, but if changed checks if the result is reasonable against mean of kmean values (tolerance 10)
fx <- function(i, kmean=1) {
nearest <- function(i, dir){
if(ord.dt[i+1*dir, "vnr"]==ord.dt[i, "vnr"]){
ifelse(!is.na(ord.dt[[i+1*dir,"ddd"]]), ord.dt[[i+1*dir,"ddd"]] / ord.dt[[i+1*dir,"kust"]], nearest(i+1*dir, dir))
}else{
NA
}
}
nearest_prior <- nearest(i, -1)
res<-ifelse(!is.na(nearest_prior), ord.dt[[i, "kust"]] * nearest_prior , ord.dt[[i, "kust"]] * nearest(i, 1))
if(kmean!=1){
d <- ord.dt[(i - ceiling(kmean/2)): (i + floor(kmean/2))][vnr==ord.dt[[i, "vnr"]],][-(ceiling(kmean/2)+1)]
mean_res <- ord.dt[[i, "kust"]] * mean(unlist(d[,"ddd"] / d[,"kust"]), trim = 0.3, na.rm = TRUE)
ifelse(abs(mean_res-res)>10, mean_res, res)
}else{
res
}
}
indices_used <- ifelse(params$test, test_indices, ii)
system.time(
res <- lapply(ii, fx, kmean=4)
)
res <- unlist(res)
ord.dt$ddd[ii] <- res
which(is.na(res))
ord.dt[is.na(ddd) & anja!=""]
update.packages(c("haven", "sas7bdat", "data.table"))
install.packages(c("haven", "sas7bdat", "data.table"))
# install.packages(c("haven", "sas7bdat", "data.table"))
require(haven)
require(sas7bdat)
require(data.table)
dt <- setDT(read_sas("data.sas7bdat"))
# install.packages(c("haven", "sas7bdat", "data.table"))
require(haven)
require(sas7bdat)
require(data.table)
dt <- setDT(read_sas("data.sas7bdat"))
# convert to dates
dt[, otpvm:=as.Date(otpvm, "%Y-%m-%d")]
# remove toimituskulu from kust
dt[otpvm<as.Date("2014-01-01"), kust:=(kust-43)]
dt[otpvm>=as.Date("2014-01-01"), kust:=(kust-239)]
ord.dt <- dt[order(vnr, otpvm)]
ii <- which( (is.na(ord.dt[,"ddd"]) | ord.dt[,"ddd"]==0) & ord.dt[,"anja"]!="")
# Currently, finds the closest prior match by date with the same vnr. If prior not found, finds nearest after
# kmean by default eq 1, but if changed checks if the result is reasonable against mean of kmean values (tolerance 10)
fx <- function(i, kmean=1) {
nearest <- function(i, dir){
if(ord.dt[i+1*dir, "vnr"]==ord.dt[i, "vnr"]){
ifelse(!is.na(ord.dt[[i+1*dir,"ddd"]]), ord.dt[[i+1*dir,"ddd"]] / ord.dt[[i+1*dir,"kust"]], nearest(i+1*dir, dir))
}else{
NA
}
}
nearest_prior <- nearest(i, -1)
res<-ifelse(!is.na(nearest_prior), ord.dt[[i, "kust"]] * nearest_prior , ord.dt[[i, "kust"]] * nearest(i, 1))
if(kmean!=1){
d <- ord.dt[(i - ceiling(kmean/2)): (i + floor(kmean/2))][vnr==ord.dt[[i, "vnr"]],][-(ceiling(kmean/2)+1)]
mean_res <- ord.dt[[i, "kust"]] * mean(unlist(d[,"ddd"] / d[,"kust"]), trim = 0.3, na.rm = TRUE)
ifelse(abs(mean_res-res)>10, mean_res, res)
}else{
res
}
}
indices_used <- ifelse(params$test, test_indices, ii)
system.time(
res <- lapply(ii, fx, kmean=4)
)
res <- unlist(res)
ord.dt$ddd[ii] <- res
which(is.na(res))
ord.dt[is.na(ddd) & anja!=""]
# install.packages(c("haven", "sas7bdat", "data.table"))
require(haven)
require(sas7bdat)
require(data.table)
dt <- setDT(read_sas("data.sas7bdat"))
# convert to dates
dt[, otpvm:=as.Date(otpvm, "%Y-%m-%d")]
# remove toimituskulu from kust
dt[otpvm<as.Date("2014-01-01"), kust:=(kust-43)]
dt[otpvm>=as.Date("2014-01-01"), kust:=(kust-239)]
ord.dt <- dt[order(vnr, otpvm)]
ii <- which( (is.na(ord.dt[,"ddd"]) | ord.dt[,"ddd"]==0) & ord.dt[,"anja"]!="")
ntests = 1000
test_indices <- sample((1:nrow(dt))[-ii], ntests)
# Currently, finds the closest prior match by date with the same vnr. If prior not found, finds nearest after
# kmean by default eq 1, but if changed checks if the result is reasonable against mean of kmean values (tolerance 10)
fx <- function(i, kmean=1) {
nearest <- function(i, dir){
if(ord.dt[i+1*dir, "vnr"]==ord.dt[i, "vnr"]){
ifelse(!is.na(ord.dt[[i+1*dir,"ddd"]]), ord.dt[[i+1*dir,"ddd"]] / ord.dt[[i+1*dir,"kust"]], nearest(i+1*dir, dir))
}else{
NA
}
}
nearest_prior <- nearest(i, -1)
res<-ifelse(!is.na(nearest_prior), ord.dt[[i, "kust"]] * nearest_prior , ord.dt[[i, "kust"]] * nearest(i, 1))
if(kmean!=1){
d <- ord.dt[(i - ceiling(kmean/2)): (i + floor(kmean/2))][vnr==ord.dt[[i, "vnr"]],][-(ceiling(kmean/2)+1)]
mean_res <- ord.dt[[i, "kust"]] * mean(unlist(d[,"ddd"] / d[,"kust"]), trim = 0.3, na.rm = TRUE)
ifelse(abs(mean_res-res)>10, mean_res, res)
}else{
res
}
}
indices_used <- ifelse(params$test, test_indices, ii)
system.time(
res <- lapply(ii, fx, kmean=4)
)
res <- unlist(res)
ord.dt$ddd[ii] <- res
which(is.na(res))
ord.dt[is.na(ddd) & anja!=""]
# install.packages(c("haven", "sas7bdat", "data.table"))
require(haven)
require(sas7bdat)
require(data.table)
dt <- setDT(read_sas("data.sas7bdat"))
# convert to dates
dt[, otpvm:=as.Date(otpvm, "%Y-%m-%d")]
# remove toimituskulu from kust
dt[otpvm<as.Date("2014-01-01"), kust:=(kust-43)]
dt[otpvm>=as.Date("2014-01-01"), kust:=(kust-239)]
ord.dt <- dt[order(vnr, otpvm)]
ii <- which( (is.na(ord.dt[,"ddd"]) | ord.dt[,"ddd"]==0) & ord.dt[,"anja"]!="")
ntests = 1000
test_indices <- sample((1:nrow(dt))[-ii], ntests)
# Currently, finds the closest prior match by date with the same vnr. If prior not found, finds nearest after
# kmean by default eq 1, but if changed checks if the result is reasonable against mean of kmean values (tolerance 10)
fx <- function(i, kmean=1) {
nearest <- function(i, dir){
if(ord.dt[i+1*dir, "vnr"]==ord.dt[i, "vnr"]){
ifelse(!is.na(ord.dt[[i+1*dir,"ddd"]]), ord.dt[[i+1*dir,"ddd"]] / ord.dt[[i+1*dir,"kust"]], nearest(i+1*dir, dir))
}else{
NA
}
}
nearest_prior <- nearest(i, -1)
res<-ifelse(!is.na(nearest_prior), ord.dt[[i, "kust"]] * nearest_prior , ord.dt[[i, "kust"]] * nearest(i, 1))
if(kmean!=1){
d <- ord.dt[(i - ceiling(kmean/2)): (i + floor(kmean/2))][vnr==ord.dt[[i, "vnr"]],][-(ceiling(kmean/2)+1)]
mean_res <- ord.dt[[i, "kust"]] * mean(unlist(d[,"ddd"] / d[,"kust"]), trim = 0.3, na.rm = TRUE)
ifelse(abs(mean_res-res)>10, mean_res, res)
}else{
res
}
}
indices_used <- ifelse(params$test, test_indices, ii)
system.time(
res <- lapply(ii, fx, kmean=4)
)
res <- unlist(res)
ord.dt$ddd[ii] <- res
which(is.na(res))
ord.dt[is.na(ddd) & anja!=""]
targets <- unname(unlist(ord.dt[test_indices, "ddd"]))
e <- abs(targets - res)
na_indices <- which(is.na(e))
cat("Number of NA values: ", length(na_indices), "\n")
avg_err = ifelse(length(na_indices) > 0, sum(e[-na_indices]) / ntests, sum(e) / ntests)
cat("Average error: ", avg_err, "\n")
cat("Average error (5% reduced from both sides): ", mean(e, trim = 0.05, na.rm = TRUE), "\n")
wi <- order(e, decreasing = TRUE)[1:5]
cat("5 worst predictions: \n")
cat("predicted values: ", res[wi], "\n")
cat("actual values: ", targets[wi], "\n")
n = 1
cat("inspection of ", n, "th worst prediction:\n")
ord.dt[(test_indices[wi[1]]-1):(test_indices[wi[1]]+1),]
View(params)
params$test
# install.packages(c("haven", "sas7bdat", "data.table"))
require(haven)
require(sas7bdat)
require(data.table)
dt <- setDT(read_sas("data.sas7bdat"))
# convert to dates
dt[, otpvm:=as.Date(otpvm, "%Y-%m-%d")]
# remove toimituskulu from kust
dt[otpvm<as.Date("2014-01-01"), kust:=(kust-43)]
dt[otpvm>=as.Date("2014-01-01"), kust:=(kust-239)]
ord.dt <- dt[order(vnr, otpvm)]
ii <- which( (is.na(ord.dt[,"ddd"]) | ord.dt[,"ddd"]==0) & ord.dt[,"anja"]!="")
# Currently, finds the closest prior match by date with the same vnr. If prior not found, finds nearest after
# kmean by default eq 1, but if changed checks if the result is reasonable against mean of kmean values (tolerance 10)
fx <- function(i, kmean=1) {
nearest <- function(i, dir){
if(ord.dt[i+1*dir, "vnr"]==ord.dt[i, "vnr"]){
ifelse(!is.na(ord.dt[[i+1*dir,"ddd"]]), ord.dt[[i+1*dir,"ddd"]] / ord.dt[[i+1*dir,"kust"]], nearest(i+1*dir, dir))
}else{
NA
}
}
nearest_prior <- nearest(i, -1)
res<-ifelse(!is.na(nearest_prior), ord.dt[[i, "kust"]] * nearest_prior , ord.dt[[i, "kust"]] * nearest(i, 1))
if(kmean!=1){
d <- ord.dt[(i - ceiling(kmean/2)): (i + floor(kmean/2))][vnr==ord.dt[[i, "vnr"]],][-(ceiling(kmean/2)+1)]
mean_res <- ord.dt[[i, "kust"]] * mean(unlist(d[,"ddd"] / d[,"kust"]), trim = 0.3, na.rm = TRUE)
ifelse(abs(mean_res-res)>10, mean_res, res)
}else{
res
}
}
indices_used <- ifelse(params$test, test_indices, ii)
system.time(
res <- lapply(ii, fx, kmean=4)
)
res <- unlist(res)
params$test
ord.dt$ddd[ii] <- res
which(is.na(res))
ord.dt[is.na(ddd) & anja!=""]
ntests = 1000
test_indices <- sample((1:nrow(dt))[-ii], ntests)
# install.packages(c("haven", "sas7bdat", "data.table"))
require(haven)
require(sas7bdat)
require(data.table)
# convert to dates
dt[, otpvm:=as.Date(otpvm, "%Y-%m-%d")]
dt <- setDT(read_sas("data.sas7bdat"))
# convert to dates
dt[, otpvm:=as.Date(otpvm, "%Y-%m-%d")]
# remove toimituskulu from kust
dt[otpvm<as.Date("2014-01-01"), kust:=(kust-43)]
dt[otpvm>=as.Date("2014-01-01"), kust:=(kust-239)]
ord.dt <- dt[order(vnr, otpvm)]
ii <- which( (is.na(ord.dt[,"ddd"]) | ord.dt[,"ddd"]==0) & ord.dt[,"anja"]!="")
ntests = 1000
test_indices <- sample((1:nrow(dt))[-ii], ntests)
# Currently, finds the closest prior match by date with the same vnr. If prior not found, finds nearest after
# kmean by default eq 1, but if changed checks if the result is reasonable against mean of kmean values (tolerance 10)
fx <- function(i, kmean=1) {
nearest <- function(i, dir){
if(ord.dt[i+1*dir, "vnr"]==ord.dt[i, "vnr"]){
ifelse(!is.na(ord.dt[[i+1*dir,"ddd"]]), ord.dt[[i+1*dir,"ddd"]] / ord.dt[[i+1*dir,"kust"]], nearest(i+1*dir, dir))
}else{
NA
}
}
nearest_prior <- nearest(i, -1)
res<-ifelse(!is.na(nearest_prior), ord.dt[[i, "kust"]] * nearest_prior , ord.dt[[i, "kust"]] * nearest(i, 1))
if(kmean!=1){
d <- ord.dt[(i - ceiling(kmean/2)): (i + floor(kmean/2))][vnr==ord.dt[[i, "vnr"]],][-(ceiling(kmean/2)+1)]
mean_res <- ord.dt[[i, "kust"]] * mean(unlist(d[,"ddd"] / d[,"kust"]), trim = 0.3, na.rm = TRUE)
ifelse(abs(mean_res-res)>10, mean_res, res)
}else{
res
}
}
indices_used <- ifelse(params$test, test_indices, ii)
system.time(
res <- lapply(ii, fx, kmean=4)
)
res <- unlist(res)
ord.dt$ddd[ii] <- res
which(is.na(res))
ord.dt[is.na(ddd) & anja!=""]
# install.packages(c("haven", "sas7bdat", "data.table"))
require(haven)
require(sas7bdat)
require(data.table)
dt <- setDT(read_sas("data.sas7bdat"))
# convert to dates
dt[, otpvm:=as.Date(otpvm, "%Y-%m-%d")]
# remove toimituskulu from kust
dt[otpvm<as.Date("2014-01-01"), kust:=(kust-43)]
dt[otpvm>=as.Date("2014-01-01"), kust:=(kust-239)]
ord.dt <- dt[order(vnr, otpvm)]
ii <- which( (is.na(ord.dt[,"ddd"]) | ord.dt[,"ddd"]==0) & ord.dt[,"anja"]!="")
test = FALSE
ntests = 1000
test_indices <- sample((1:nrow(dt))[-ii], ntests)
# Currently, finds the closest prior match by date with the same vnr. If prior not found, finds nearest after
# kmean by default eq 1, but if changed checks if the result is reasonable against mean of kmean values (tolerance 10)
fx <- function(i, kmean=1) {
nearest <- function(i, dir){
if(ord.dt[i+1*dir, "vnr"]==ord.dt[i, "vnr"]){
ifelse(!is.na(ord.dt[[i+1*dir,"ddd"]]), ord.dt[[i+1*dir,"ddd"]] / ord.dt[[i+1*dir,"kust"]], nearest(i+1*dir, dir))
}else{
NA
}
}
nearest_prior <- nearest(i, -1)
res<-ifelse(!is.na(nearest_prior), ord.dt[[i, "kust"]] * nearest_prior , ord.dt[[i, "kust"]] * nearest(i, 1))
if(kmean!=1){
d <- ord.dt[(i - ceiling(kmean/2)): (i + floor(kmean/2))][vnr==ord.dt[[i, "vnr"]],][-(ceiling(kmean/2)+1)]
mean_res <- ord.dt[[i, "kust"]] * mean(unlist(d[,"ddd"] / d[,"kust"]), trim = 0.3, na.rm = TRUE)
ifelse(abs(mean_res-res)>10, mean_res, res)
}else{
res
}
}
indices_used <- ifelse(params$test, test_indices, ii)
system.time(
res <- lapply(ii, fx, kmean=4)
)
res <- unlist(res)
ord.dt$ddd[ii] <- res
which(is.na(res))
ord.dt[is.na(ddd) & anja!=""]
# install.packages(c("haven", "sas7bdat", "data.table"))
require(haven)
require(sas7bdat)
require(data.table)
dt <- setDT(read_sas("data.sas7bdat"))
# convert to dates
dt[, otpvm:=as.Date(otpvm, "%Y-%m-%d")]
# remove toimituskulu from kust
dt[otpvm<as.Date("2014-01-01"), kust:=(kust-43)]
dt[otpvm>=as.Date("2014-01-01"), kust:=(kust-239)]
ord.dt <- dt[order(vnr, otpvm)]
ii <- which( (is.na(ord.dt[,"ddd"]) | ord.dt[,"ddd"]==0) & ord.dt[,"anja"]!="")
test = FALSE
ntests = 1000
test_indices <- sample((1:nrow(dt))[-ii], ntests)
# Currently, finds the closest prior match by date with the same vnr. If prior not found, finds nearest after
# kmean by default eq 1, but if changed checks if the result is reasonable against mean of kmean values (tolerance 10)
fx <- function(i, kmean=1) {
nearest <- function(i, dir){
if(ord.dt[i+1*dir, "vnr"]==ord.dt[i, "vnr"]){
ifelse(!is.na(ord.dt[[i+1*dir,"ddd"]]), ord.dt[[i+1*dir,"ddd"]] / ord.dt[[i+1*dir,"kust"]], nearest(i+1*dir, dir))
}else{
NA
}
}
nearest_prior <- nearest(i, -1)
res<-ifelse(!is.na(nearest_prior), ord.dt[[i, "kust"]] * nearest_prior , ord.dt[[i, "kust"]] * nearest(i, 1))
if(kmean!=1){
d <- ord.dt[(i - ceiling(kmean/2)): (i + floor(kmean/2))][vnr==ord.dt[[i, "vnr"]],][-(ceiling(kmean/2)+1)]
mean_res <- ord.dt[[i, "kust"]] * mean(unlist(d[,"ddd"] / d[,"kust"]), trim = 0.3, na.rm = TRUE)
ifelse(abs(mean_res-res)>10, mean_res, res)
}else{
res
}
}
indices_used <- ifelse(params$test, test_indices, ii)
system.time(
res <- lapply(ii, fx, kmean=4)
)
res <- unlist(res)
ord.dt$ddd[ii] <- res
which(is.na(res))
ord.dt[is.na(ddd) & anja!=""]
View(params)
# install.packages(c("haven", "sas7bdat", "data.table"))
require(haven)
require(sas7bdat)
require(data.table)
dt <- setDT(read_sas("data.sas7bdat"))
# convert to dates
dt[, otpvm:=as.Date(otpvm, "%Y-%m-%d")]
# remove toimituskulu from kust
dt[otpvm<as.Date("2014-01-01"), kust:=(kust-43)]
dt[otpvm>=as.Date("2014-01-01"), kust:=(kust-239)]
ord.dt <- dt[order(vnr, otpvm)]
ii <- which( (is.na(ord.dt[,"ddd"]) | ord.dt[,"ddd"]==0) & ord.dt[,"anja"]!="")
test = FALSE
ntests = 1000
test_indices <- sample((1:nrow(dt))[-ii], ntests)
# Currently, finds the closest prior match by date with the same vnr. If prior not found, finds nearest after
# kmean by default eq 1, but if changed checks if the result is reasonable against mean of kmean values (tolerance 10)
fx <- function(i, kmean=1) {
nearest <- function(i, dir){
if(ord.dt[i+1*dir, "vnr"]==ord.dt[i, "vnr"]){
ifelse(!is.na(ord.dt[[i+1*dir,"ddd"]]), ord.dt[[i+1*dir,"ddd"]] / ord.dt[[i+1*dir,"kust"]], nearest(i+1*dir, dir))
}else{
NA
}
}
nearest_prior <- nearest(i, -1)
res<-ifelse(!is.na(nearest_prior), ord.dt[[i, "kust"]] * nearest_prior , ord.dt[[i, "kust"]] * nearest(i, 1))
if(kmean!=1){
d <- ord.dt[(i - ceiling(kmean/2)): (i + floor(kmean/2))][vnr==ord.dt[[i, "vnr"]],][-(ceiling(kmean/2)+1)]
mean_res <- ord.dt[[i, "kust"]] * mean(unlist(d[,"ddd"] / d[,"kust"]), trim = 0.3, na.rm = TRUE)
ifelse(abs(mean_res-res)>10, mean_res, res)
}else{
res
}
}
indices_used <- ifelse(params$test, test_indices, ii)
system.time(
res <- lapply(ii, fx, kmean=4)
)
res <- unlist(res)
ord.dt$ddd[ii] <- res
which(is.na(res))
ord.dt[is.na(ddd) & anja!=""]
setwd("~/Dropbox/lääkeostot/modefill")
